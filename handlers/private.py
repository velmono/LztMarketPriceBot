from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.enums import ChatType
from aiogram.types import (
    Message, 
    KeyboardButton,
    ReplyKeyboardMarkup
)
from aiogram.filters import Command
from services.links_service import create_report
from database.repositories.users import add, check_user, change_share


router = Router()
router.message.filter(F.chat.type.in_([ChatType.PRIVATE]))


class States(StatesGroup):
    CheckState = State()
    PercentState = State()


@router.message(Command("start", prefix="/!"))
async def start_message(message: Message, state: FSMContext):
    
    links_button = KeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Å—ã–ª–∫–∏")
    config_button = KeyboardButton(text="–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
    
    keyboard = ReplyKeyboardMarkup(keyboard=[[links_button,config_button]],resize_keyboard=True)
    
    if message.from_user is not None:
        await add(message.from_user.id) if not await check_user(message.from_user.id) else None
    answer_text = """–ë–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ LZT MARKET.

–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Å—ã–ª–æ–∫ - –ø–æ —Å—Å—ã–ª–∫–∞–º —É–∑–Ω–∞—Ç—å —Å—Ç–æ–∏–º–æ—Å—Ç—å –∏ –¥–æ–ª—é –∞–∫–∫–∞—É–Ω—Ç–æ–≤
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –æ—Ç —Å—É–º–º—ã –∞–∫–∫–∞—É–Ω—Ç–æ–≤

"""
    await message.answer(text=answer_text,
                     reply_markup=keyboard
                     )


@router.message(F.text == "–û—Ç–º–µ–Ω–∏—Ç—å")
@router.message(Command("cancel"))
@router.message(F.text.casefold() == "cancel")
async def cancel_operation(message: Message, state: FSMContext):
    if await state.get_state() is None:
        await start_message(message, state)
    await state.clear()
    await message.answer("–û—Ç–º–µ–Ω–µ–Ω–æ")
    await start_message(message, state)


@router.message(F.text == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Å—ã–ª–∫–∏")
async def answer_links(message: Message, state: FSMContext):
    
    cancel_button = KeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å")
    keyboard = ReplyKeyboardMarkup(keyboard=[[cancel_button]],resize_keyboard=True)
    
    
    await state.set_state(States.CheckState)
    
    answer_text = """üíæ–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏/ID
(–ö–∞–∂–¥–∞—è —Å—Å—ã–ª–∫–∞/–∫–∞–∂–¥—ã–π ID —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)

"""
    await message.answer(text=answer_text,
                         reply_markup=keyboard)


@router.message(States.CheckState)
async def check_links(message: Message, state: FSMContext):
    if message.text is not None:
        links = message.text.split()
        await message.answer(f"–û–∂–∏–¥–∞–π—Ç–µ —Å—Å—ã–ª–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—é—Ç—Å—è.\n–ó–∞–π–º–µ—Ç –ø—Ä–∏–º–µ—Ä–Ω–æ {len(links)*0.5} —Å–µ–∫—É–Ω–¥.")
        user_id = message.from_user.id if message.from_user is not None else 0
        await message.answer(f"–ì–æ—Ç–æ–≤–æ –≤–∞—à –æ—Ç—á–µ—Ç:\n{await create_report(links, user_id)}", disable_web_page_preview=True)
        await state.clear()
        await start_message(message, state)
    else:
        await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        await state.set_state(States.CheckState)


@router.message(F.text == "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è")
async def configure(message: Message, state: FSMContext):
    cancel_button = KeyboardButton(text="–û—Ç–º–µ–Ω–∏—Ç—å")
    keyboard = ReplyKeyboardMarkup(keyboard=[[cancel_button]],resize_keyboard=True)
    
    await state.set_state(States.PercentState)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –í–∞—à –ø—Ä–æ—Ü–µ–Ω—Ç –æ—Ç –≤—Å–µ–π —Å—É–º–º—ã(–ù–∞–ø—Ä–∏–º–µ—Ä: 20)",
                         reply_markup=keyboard)


@router.message(States.PercentState)
async def configure_share(message: Message, state: FSMContext):
    
    if message.from_user is None:
        await message.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    if message.text is None:
        await message.answer("–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∞—à –ø—Ä–æ—Ü–µ–Ω—Ç(–ù–∞–ø—Ä–∏–º–µ—Ä: 20)")
        return
            
    raw_text = message.text.strip('%,.!-+')
    
    try:
        percent = int(raw_text)
    except ValueError:
        await message.answer("–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –í–∞—à –ø—Ä–æ—Ü–µ–Ω—Ç(–ù–∞–ø—Ä–∏–º–µ—Ä: 20)")
        return
    
    if not (0 <= percent <= 100):
        await message.answer("–ü—Ä–æ—Ü–µ–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 0 –¥–æ 100")
        return
    
    await change_share(message.from_user.id, percent)
    await message.answer(f"–ü—Ä–æ—Ü–µ–Ω—Ç –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {percent}")
    await state.clear()
    await start_message(message, state)